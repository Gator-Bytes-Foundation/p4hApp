{"version":3,"sources":["./src/static/main.ts","./src/static/app/loading.service..ts","./src/static/app/app.module.ts","./src/static/environments/environment.ts","./src/static/app/load-interceptor.ts","./src/static/app/login/login.component.ts","./src/static/app/login/login.html","./src/static/app/app.component.ts","./src/static/app/app.component.html","./src/static/app/spinner/spinner.component.ts","./src/static/app/spinner/spinner.component.html","./src/static/app/app-routing.module.ts","./src/static/app/profile/profile.component.ts","./src/static/app/profile/profile.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  public isLoading = new BehaviorSubject(false);\n\n  constructor() { }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { AppComponent } from './app.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LoadInterceptor } from './load-interceptor';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SpinnerComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    //RouterModule.forRoot([]),\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatTabsModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    AppRoutingModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: LoadInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n  //entryComponents: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpResponse\n} from '@angular/common/http';\nimport { Observable, Subscription } from 'rxjs';\nimport {catchError, map} from 'rxjs/operators'\nimport { LoadingService } from './loading.service.';\nimport { finalize } from 'rxjs/operators';\n\n\n/**\n * This class is for intercepting http requests. When a request starts, we set the loadingSub property\n * in the LoadingService to true. Once the request completes and we have a response, set the loadingSub\n * property to false. If an error occurs while servicing the request, set the loadingSub property to false.\n * @class {HttpRequestInterceptor}\n */\n@Injectable()\nexport class LoadInterceptor implements HttpInterceptor {\n  private requests: HttpRequest<any>[] = [];\n\n  constructor(private loadingService: LoadingService) { \n\n  }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    console.log('intercepted');\n    this.requests.push(req);\n\n    console.log(\"No of requests--->\" + this.requests.length);\n\n    this.loadingService.isLoading.next(true);\n    return new Observable(observer => {\n      const subscription = next.handle(req)\n        .subscribe(\n          event => {\n            if (event instanceof HttpResponse) {\n              this.removeRequest(req);\n              observer.next(event);\n            }\n          },\n          err => {\n            alert('error' + err);\n            this.removeRequest(req);\n            observer.error(err);\n          },\n          () => {\n            this.removeRequest(req);\n            observer.complete();\n          });\n      // remove request from queue when cancelled\n      return () => {\n        this.removeRequest(req);\n        subscription.unsubscribe();\n      };\n    });\n  }\n  removeRequest(req: HttpRequest<any>) {\n    const i = this.requests.indexOf(req);\n    if (i >= 0) {\n      this.requests.splice(i, 1);\n    }\n    this.loadingService.isLoading.next(this.requests.length > 0);\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.html',\n  styleUrls: ['./login.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","   <!-- Remind Passowrd -->\n    <div id=\"formFooter\">\n      <a class=\"underlineHover\" href=\"#\">Forgot Password?</a>\n    </div>\n     <div id=\"formFooter\">\n          <a href=\"/signup\" class=\"underlineHover\">Sign Up</a>\n    </div>\n\n","import { Component,OnInit } from '@angular/core';\nimport { Event, RouterModule, Routes, Router, NavigationStart, NavigationEnd, NavigationError, NavigationCancel } from '@angular/router';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport {LoadingService} from './loading.service.';\nimport {delay} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'p4hApp';\n  loading: boolean = false;\n  routing: boolean = false;\n\n  \n  constructor(private router: Router, private loadingService: LoadingService) {\n\n    router.events.subscribe((event: Event) => {\n      this.navigationInterceptor(event)\n    });\n\n    this.loadingService.isLoading.subscribe((v) => {\n      console.log('loading: ' + v);\n      this.loading = v;\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  navigationInterceptor(event: Event): void {\n\n      if(event instanceof NavigationStart) {\n        this.routing = true; \n        console.log('routing is true'); \n      }\n      if(event instanceof NavigationEnd) {\n        this.routing = false; \n        console.log('routing is false');  \n      } \n      // Set loading state to false in both of the below events to hide the spinner in case a request fails\n      if (event instanceof NavigationCancel) {\n        this.routing = false;\n      }\n      if (event instanceof NavigationError) {\n        this.routing = false;\n      }\n      // NavigationEnd\n      // NavigationCancel\n      // NavigationError\n      // RoutesRecognized\n  }\n}\n","<app-login></app-login>\n<div class=\"spinner-wrapper\"  *ngIf=\"loading || routing\">\n    <app-spinner></app-spinner> \n</div>  ","import { Component, OnInit, Input  } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.scss']\n})\nexport class SpinnerComponent implements OnInit {\n\n  @Input() message = 'loading!';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n      <div id=\"loader\">\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"dot\"></div>\n        <div class=\"loading\"></div>\n      </div>\n      <p class=\"spinner-message\" *ngIf=\"message && message !== ''\">\n        {{message}}\n      </p>\n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n//This is my case \nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'profile',\n        component: ProfileComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n  @Input() loading: boolean; \n  constructor() { \n    this.loading = true; \n  }\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"spinner-wrapper\"  *ngIf=\"loading\">\n<app-spinner></app-spinner> \n</div>  ","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}